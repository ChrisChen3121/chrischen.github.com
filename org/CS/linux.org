#+TITLE: Linux 基础
#+KEYWORDS: Linux, 基础
#+OPTIONS: H:3 toc:2 num:3 ^:nil
#+SETUPFILE: ../configOrg/level1.org
* 系统运行模式(run level)
切换方式：sudo init 0
| run level | 说明         |
|-----------+--------------|
|         0 | 关机         |
|         3 | 文字界面模式 |
|         5 | 图形接口模式 |
|         6 | 重启         |

* Bash
** 基础
*** 启动注销
#+BEGIN_VERSE
登陆信息存放在/etc/issue
注销命令：exit
#+END_VERSE
*** 命令格式说明
#+begin_example
command [-options] parameter1 parameter2 ...
命令     选项      参数(1)    参数(2)
#+end_example
说明：
1) 多个空格视为一个
2) 全名参数 --help 单名 -h
3) 命令太长，换行使用"\"
4) 大小写敏感
*** 命令行语言环境
#+begin_src sh
echo $LANG #显示当前语言
LANG=en_US #改变语言变量为英语
#+end_src
** man 命令说明
*** 命令分类
   eg: DATE(1)
   | 代号 | 代表的内容                                           |
   |------+------------------------------------------------------|
   |    1 | 使用者在 shell 环境中可操作命令或可执行文件            |
   |    2 | 系统核心可呼叫的函数与工具                           |
   |    3 | 一些常用的函数与函数库，大部分为 C 函数库(libc)        |
   |    4 | 装置文件的说明，通常在/dev 下                         |
   |    5 | 配置文件或者是某种文件的格式                         |
   |    6 | 游戏                                                 |
   |    7 | 惯例与协议，如：Linux 文件系统、网络协议、ASCII 码说明 |
   |    8 | 系统管理员可用的管理命令                             |
   |    9 | 跟 kernel 有关的文件                                   |
1、5、8 特别重要。
*** 命令各部分说明
| 代号        | 内容说明                             |
|-------------+--------------------------------------|
| DESCRIPTION | 完整的说明                           |
| OPTIONS     | 针对语法部分中，可用选项的说明       |
| COMMANDS    | 当程序运行时，可在此程序中下达的命令 |
| FILES       | 这个程序所使用或参考或连接到的文件   |
*** MAN 快捷键
| 按键            | 行为                     |
|-----------------+--------------------------|
| 空格，Page Down | 往下翻页                 |
| Page Up         | 往上翻页                 |
| HOME            | 第一页                   |
| END             | 最后一页                 |
| /string         | 向下搜索字符串“string” |
| ？string        | 向上搜索字符串"string"   |
| n,N             | 搜索时向下、向上         |
| q               | 结束 man                  |
*** MAN 内容文件位置
- 通常放在/usr/share/man 与/usr/local/man。ubuntu：/etc/manpath.conf
- [man man]一样可以查询
- man -f [CAMMAND] 查找与 CAMMAND 有关的说明文件；等同命令 whatis [CAMMAND]，需先安装 makewhatis
#+begin_src sh
man -f man
man (7)              - macros to format man pages
man (1)              - an interface to the on-line reference manuals
man 7 man #察看 man(7)的说明
#+end_src
- man -k [keyword] 关键字各 Man Page[Description]中搜索；等同命令 apropos [keyword]
- man -K [keyword] 关键字全文搜索
#+begin_src sh
man -k man
deja-dup-preferences (1) - manual page for deja-dup-preferences 22.0
UPower (7)           - System-wide Power Management
Xcursor (3)          - Cursor management library
accessdb (8)         - dumps the content of a man-db database in a human readable format
aclocal (1)          - manual page for aclocal 1.11.3
...
#+end_src
** info 命令说明
| 快捷键          | 行为           |
|-----------------+----------------|
| 空格、page down | 下一页         |
| page up         | 上一页         |
| tab             | 顶部 node 间游走 |
| Enter           | 进入超链接     |
| n               | Next           |
| p               | Prev           |
| u               | Up             |
| s               | 字符串搜索     |
| h               | 显示 help       |
| ?               | 命令一览表     |
| q               | 结束           |
*** info 内容所在文件
/usr/share/info

** 重要快捷键
| C-c | 中断命令     |
| C-d | 中断键盘输入 |
| Tab | 补全         |
** 所有命令文档位置
/usr/share/doc
* 权限
#+BEGIN_VERSE
使用者信息，记录在/etc/passwd
个人的密码记录在/etc/shadow
群组记录在/etc/group
#+END_VERSE
** 特殊权限
SUID=4, SGID=2, SBIT=1
*** Set UID
- SUID 仅对二进制程序和目录有效
- 运行者对于该程序需要有 x 可运行权限
- 运行者将临时性具有该程序拥有者的权限
*** Set GID
基本同 SUID，区别在于运行者将临时性具有该程序 *群组* 的权限
*** Sticky Bit
只针对目录有效：
- 使用者对此目录拥有写入权限
- 当使用者创建文件或目录时，仅有自己和 root 有权删除
* 文件系统
** 硬件相关目录
根目录 /dev
|-------------------+--------------------|
| 设备              | 文件名             |
|-------------------+--------------------|
| IDE 硬盘           | /hd[a-d]           |
| SATA 硬盘/U 盘/SCSI | /sd[a-p]           |
| 打印机(COM)       | /lp[0-2]           |
| 打印机(U 口)       | /usb/lp[0-15]      |
| 鼠标              | /usb/mouse[0-15]   |
| CDROM             | /cdrom             |
| 当前鼠标          | /mouse             |
| 磁带机            | IDE:/ht0 SCSI:/st0 |
*** IDE 接口
#+BEGIN_VERSE
一个 IDE 接口可以有两条排线，可连接两个 IDE 设备。
一般 PC 上会有两个 IDE 接口。以此为例。
#+END_VERSE
|------+----------+----------|
|      | Master   | Slave    |
| IDE1 | /dev/hda | /dev/hdb |
| IDE2 | /dev/hdc | /dev/hdd |
*** SATA 接口
#+BEGIN_VERSE
由于根据 SCSI 模块来驱动，文件夹名按内核识别的顺序
#+END_VERSE
*** 相关硬盘知识
#+BEGIN_VERSE
主要启动记录区(Master Boot Record, MBR)：可以安装启动管理程序的地方，有 446 bytes
分割表(partition table)：记录整颗硬盘分割的状态，有 64 bytes
#+END_VERSE

** 文件权限
#+begin_example
drwxr-xr-x  3 root root 4096 10 月  1  2012 .local
-rw-r--r--  1 root root  140  4 月 19  2012 .profile
#+end_example
- 第一列表示文件权限，由十个字符组成。例：-rwxrwx---
  - 第一个字符表示档案类型。
    - *d* 表示目录
    - *-* 表示文件
    - *l* 表示链接文件(link file)，即 windows 下的快捷方式
    - *b* /dev/中的存储设备(block 设备档)
    - *c* /dev/中的输入输出设备(character 设备文件)
    - *s* sockets 一般在/var/run 中可以看到该类型文件
    - *p* pipe,FIFO first in first out 主要解决多个程序同时存取一个文件造成的问题
  - rwx [x]代表可执行文件,第一组文件拥有者的权限，第二组同群组的权限，第三组其他非本群组的权限
- 第二列数字代表有多少个文件名连接到此 i-node
- 第三列表示这个文件的拥有者帐号
- 第四列表示这个文件的所属群组
- 第五列表示这个文件的 Size,默认单位 bytes
- 第六列表示这个文件的建档日期或者最近的修改日期
- 第七列为文件名
*** 相关命令
#+BEGIN_VERSE
chgrp: 改变文件所属群组
chown: 改变文件拥有者，同样能修改所属群组名称。例：chown user:users test.txt
以上两个命令使用的时机：不如 cp 命令会拷贝文件，且保留源文件的拥有者和群组信息。可以手动修改。
chmod: 改变文件的权限
#+END_VERSE
- chmod 命令详解
  #+BEGIN_VERSE
  数字方式：
  权限数字对照表如下：
  #+END_VERSE
  | r | 4 |
  | w | 2 |
  | x | 1 |
  #+BEGIN_VERSE
  例：chmod 644 test.txt 对应 -rw-r--r--
  符号方式：
  #+END_VERSE
  | chmod | ugoa | +-= | rwx | file or folder path |
  #+BEGIN_VERSE
  例：chmod u=rwx,go=rx test.txt
  chmod a+w test.txt (所有账户都赋予写权限)
  #+END_VERSE
*** 权限细节
#+BEGIN_VERSE
文件的写权限只针对文件的内容，不能删除该文件。
目录的写权限才能对目录下的文件或子目录进行新建、删除。
目录的可执行权限表明可以使用 cd 指令将其转为工作目录。
#+END_VERSE
*** 文件名长度限制
单一文件或目录 255 个字符；完整路径 4096 个字符。
** FHS 目录划分
- / (root):与开机、系统恢复有关
  #+BEGIN_VERSE
  FHS 标准建议将根目录放在较小的分区内，最好不要跟其他应用程序分在一个分区中。
  理由：根目录下的东西越多出错的几率就越大。另外一点，单独的根目录有较佳的性能。
  以下五个目录必须与根目录挂载在同一分区：
  /etc：配置文件
  /bin：重要执行档
  /dev：所需要的设备文件
  /lib：执行档所需的函式库与核心所需的模块
  /sbin：重要的系统执行文件
  #+END_VERSE
- /usr:与软件安装/执行有关
- /var:与系统运作过程有关
关于更具体的子目录划分，参照[[http://www.pathname.com/fhs/][FHS 官方说明档]]， 简要中文说明[[http://vbird.dic.ksu.edu.tw/linux_basic/0210filepermission_3.php][鸟哥私房菜]]。
** 路径符号说明
.         代表此层目录
..        代表上一层目录
-         代表前一个工作目录
~         代表『目前使用者身份』所在的家目录
~account  代表 account 这个使用者的家目录(account 是个帐号名称)
* XWindows
** 启动禁用 XWin
   /etc/inittab
** 命令行界面启动 XWin
   startx 命令
* 错误信息
** log
在/var/log 目录
* 设置语言环境
** 修改系统默认语系
#+BEGIN_VERSE
red hat: /etc/sysconfig/i18n
ubuntu: /etc/default/locale
#+END_VERSE
** sunpinyin config
/usr/lib/ibus-sunpinyin/ibus-setup-sunpinyin
* Shell
** man
   mandb, manpath
** findutils
   which, whereis, locate
** filter
   cut, sort, uniq, wc(wordcount)
   - tee: copy stdin to two stdout
   - grep: g/regular-expression/
** grep, awk, sed
*** grep
    useful parameter: -c, -i, -v, -l
** run scripts
*** bash -x: run and print every single command
*** fc: copy command to file
** input, output
   - read
   - echo, printf

** args
   - $0, $1, $2
   - $#: arg count except $0
   - $*: all args except $0
** test: logic condition
* 命令拾遗
** 常用命令行列表
|---------+--------------------------------------------------------------|
| 命令    | 说明                                                         |
|---------+--------------------------------------------------------------|
| date    | 察看日期时间。常用："+%Y/%m/%d" "+%H:%M" 注：FORMAT 前缀为"+" |
| cal     | 日历。常用：cal [month] [year]                               |
| bc      | 计算器。进入命令环境                                         |
| who     | 查看在线用户                                                 |
| netstat | 查看网络状态。常用："-a"                                     |
| ps      | 查看运行进程。常用："-aux"                                   |
| fsck    | 文件系统检查                                                 |
| cp      | 复制文件。                                                   |
| uname   | 打印系统信息。                                               |
** bc
- 保留小数点后位数
  #+begin_src sh
  scale=3 #保留三位
  #+end_src
- 进制转换
  #+BEGIN_SRC sh
  echo "obase=16;10" | bc #out: A
  #+END_SRC
** sync
将内存中数据同步写入磁盘
- 一般账户使用时，仅同步自己的数据
** 目录操作
CLOSED: [2014-02-07 周五 11:47]
|----------+-------------------------------------------------------------------------------|
| 命令     | 说明                                                                          |
|----------+-------------------------------------------------------------------------------|
| chattr   | 配置隐藏属性                                                                  |
| lsattr   | 查看隐藏属性                                                                  |
| umask    | 查看配置创建目录或文件时的默认权限                                            |
| whereis  | 从文件系统 DB 中查找指定文件                                                    |
| locate   | 从/var/lib/mlocate/mlocate.db 中查找指定文件                                   |
| updatedb | 根据 /etc/updatedb.conf 的配置去遍历文件系统，更新/var/lib/mlocate/mlocate.db |

*** cp
#+BEGIN_VERSE
cp -l hard link
cp -s symbolic link(shortcut)
cp -p preserve the specified attribute,always use in backup[Important]
cp -a equals -pdr
cp -u copy when the source is newer than distination
cp -d [symbolic link] [destination] copy link
#+END_VERSE
*** chattr
#+BEGIN_VERSE
chattr +i file can not be changed -i cancel
chattr +a can not modify and remove content but can append new text.(always us
#+END_VERSE

*** find
- find -mtime 3
  查找 3 天前 24 小时内修改过的文件。

- find -newer  例子：find [folder] -newer [file] 找出比 file 的修改时间更新的其他文件。

** 查看文件内容
|------+--------------------------|
| 命令 | 说明                     |
|------+--------------------------|
| cat  | 从第一行开始显示文件内容 |
| nl   | 显示并输出行号           |
| less | 与 more 类似，可往前翻页   |
| head | 只看头几行               |
| tail | 只看最后几行             |
| od   | 以二进制方式显示         |
| file | 查看文件的类型           |
*** head
#+BEGIN_VERSE
head -n 20 show the first 20 lines
head -n -20 skip the last 20 lines
#+END_VERSE
*** tail
tail -f output appended data as the file grows[Important]
*** od
#+BEGIN_VERSE
-t  ：后面可以接各种『类型 (TYPE)』的输出，例如：
      a       ：利用默认的字节来输出；
      c       ：使用 ASCII 字节来输出
      d[size] ：利用十进位(decimal)来输出数据，每个整数占用 size bytes；
      f[size] ：利用浮点数值(floating)来输出数据，每个数占用 size bytes；
      o[size] ：利用八进位(octal)来输出数据，每个整数占用 size bytes；
      x[size] ：利用十六进位(hexadecimal)来输出数据，每个整数占用 size bytes；
#+END_VERSE

** 文件系统相关
| 命令 | 说明                                      |
|------+-------------------------------------------|
| df   | 查看文件系统容量使用情况，常用参数 iah     |
| du   | 查看目录下文件和子目录所占容量，常用参数 a |

** 三剑客
*** awk
*** grep
*** sed
#+BEGIN_SRC sh
  sed -i "s/old/new/g" `grep old -rl ./`
#+END_SRC
** 性能工具
*** top
  #+BEGIN_VERSE
  'h' for help
  top -u [username] "Display Specific User Process"
  top -n [iterations] "Quit after numbers of iteration"
  #+END_VERSE
*** sysstat

** 用户组权限
|----------+------|
| 命令     | 说明 |
|----------+------|
| chmod    |      |
| addusr   |      |
| delusr   |      |
| passwd   |      |
| addgroup |      |
| delgroup |      |
| useradd  |      |

* Shell 编程
** 特殊变量
$0: 完整命令
$#: 脚本参数个数 $0 不算在内
$*: 保存所有的参数，也不包括$0
$?: 上次执行的命令的退出状态

** 本地变量
函数内局部变量用 local 声明

** 比较运算符
| 字符串 | 数值    |
|--------+---------|
| x=y    | x -eq y |
| x!=y   | x -ne y |
| x<y    | x -lt y |
| x<=y   | x -le y |
| x>y    | x -gt y |
| x>=y   | x -ge y |
| -n x   | --      |
| -z x   | --      |
 -n、-z 分别是“不为空”、为空

*** 文件比较
 | 运算符          | true if              |
 | -d file         | file 存在且是目录     |
 | -e file         | file 存在             |
 | -f file         | file 存在且为普通文件 |
 | -r file         | 用户有 file 的读权限   |
 | -s file         | file 存在且不为空     |
 | -w file         | 用户有 file 的写权限   |
 | file1 -nt file2 | newer than           |
 | file1 -ot file2 | older than           |

** 丑小鸭
*((expr))强制进行数值运算

** 数组
#+BEGIN_SRC sh
example=(aa 'bb cc' dd)
#+END_SRC
#+BEGIN_VERSE
访问：${array_name[subscript]}
下标从 0 开始，下标*和@表示整个数组
${#array_name[*]}表示元素个数
#+END_VERSE
