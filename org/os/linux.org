#+TITLE: Linux Administration
#+KEYWORDS: design pattern
#+OPTIONS: H:3 toc:1 num:3 ^:nil
#+LANGUAGE: en-US
#+AUTHOR: ChrisChen
#+EMAIL: ChrisChen3121@gmail.com
#+SETUPFILE: ../../org-templates/level-1.org
* Users and groups
** /etc/passwd
*** Login name
*** Encrypted password placeholder
- actual password in */etc/shadow*
- change password restriction by editing */etc/login.defs*
*** UID (user ID) number
*** Default GID (group ID) number
*** GECOS information
    Use *finger* command to interpert GECOS,
    use *chfn* to change GECOS
    - full name
    - office number and building
    - office telephone extension
    - home phone number

*** Home directory
*** Login shell
    Use *chsh* to change login shell listed in */etc/shells*.

** /etc/shadow
- Login name *required*
- Encrypted password *required*
- Date of last password change
- Minimum number of days between changes
- Maximum number of days between password changes
- Number of days in advance to warn users about password expiration
- Linux: Days after password expiration that account is disabled
- Account expiration date
- A reserved field that is currently always empty

** /etc/group
- Group name
- Encrypted password or a placeholder
- GID number
- List of members, separated by commas
It is possible to enter a group password to allow users not belonging to
a group to enter it with the *newgrp* command.

A password can be set with the *gpasswd* command

A user’s personal group should contain only that user. If you want to let users
share files by way of the group mechanism, create separate groups for that purpose
** users basic
*** Required
**** Sign policy agreement
**** Edit the *passwd* and *shadow* files to define user
     Use *vipw* to edit *passwd* and *shadow*
**** Add the user to the /etc/group file(optional)
     If the new user should be a member of more groups than just the default group
     specified in the passwd file, you must edit the /etc/group file and add the user’s
     login name to each of the additional groups.
**** Set an initial password
     Use *passwd*
**** Create, *chown*, and *chmod* the user’s home directory.
     #+BEGIN_SRC bash
       sudo chown -R newuser:newgroup ~newuser
     #+END_SRC
**** Configure roles and permissions(RBAC)

*** For the user
**** Copy default startup files to the user’s home directory.
**** Set the user’s mail home and establish mail aliases.

*** For administrator
**** Verify that the account is set up correctly.
**** Add the user’s contact information and account status to your database.

*** Verification
    #+BEGIN_SRC bash
      $ pwd /* verify home directory */
      $ ls -al /* check owner/group of startup files */
    #+END_SRC

** *useradd* command
*** examples
    #+BEGIN_SRC bash
      sudo useradd -c "David Hilbert" -d /home/math/hilbert -g hilbert -G famous -m -s /bin/tcsh hilbert
    #+END_SRC
*** ubuntu
    Ubuntu provides two ways to add users: *adduser* and *useradd*. *adduser* is a Perl
    wrapper for useradd that is a bit more helpful (makes home directories, copies in
    startup files, etc.).
    - *adduser* is configured in */etc/adduser.conf*
    - *adduser* has a twin *addgroup* and cousins *deluser* and *delgroup*.
** Disabling logins
   - *usermod -L* to lock user
   - *usermod -U* to unlock user
** Centralizing account management
*** LDAP
*** Identity management systems
