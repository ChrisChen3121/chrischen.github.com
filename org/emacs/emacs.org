#+TITLE: emacs
#+AUTHOR: ChrisChen
#+EMAIL: chrischen3121@gmail.com
#+OPTIONS: H:3 toc:2 num:3 ^:nil
#+LANGUAGE: en-US
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+SETUPFILE: ../../org-templates/level-1.org
* Help
  - ~C-h i~,  ~M-x info-apropos~ for info exploration
  - ~C-h d~: apropos documentation
  - ~C-h a~: apropos command

* Window Management
  - ~C-x 4~: working with other windows
  - ~C-x 5~: same feature for frame

* Bookmarks & Registers
** Bookmark Keybinding
  | Key Binding | Purpose          |
  |-------------+------------------|
  | C-x r m     | Set a bookmark   |
  | C-x r l     | List bookmarks   |
  | C-x r b     | Jump to bookmark |

** Register Keybinding
   See ~C-x r C-h~

* Movement
  - ~M-m~: Moves to the first non-whitespace char on this line.
** Moving by Balanced Expressions
  | Key Binding | Purpose                       |
  |-------------+-------------------------------|
  | C-M-f       | Forward                       |
  | C-M-b       | Backward                      |
  | C-M-d       | Down into a list              |
  | C-M-u       | Up out of a list              |
  | C-M-n       | Forward to the next list      |
  | C-M-p       | Backward to the previous list |

** Moving by Paragraph
  | Key Binding | Purpose                             |
  |-------------+-------------------------------------|
  | M-}         | Move forward to end of paragraph    |
  | M-{         | Move backward to start of paragraph |
  | M-a         | Move to beginning of sentence       |
  | M-e         | Move to end of sentence             |

** Moving by ~defun~
  | Key Binding | Purpose                      |
  |-------------+------------------------------|
  | C-M-a       | Move to beginning of ~defun~ |
  | C-M-e       | Move to end of ~defun~       |

** Scrolling
  | Key Binding | Purpose                      |
  |-------------+------------------------------|
  | C-M-v       | Scroll down the other window |
  | C-M-- C-M-v | Scroll up the other window   |
  - ~C-u -~ same as ~C-M--~

** Go to
 | Key Binding | Purpose                  |
 |-------------+--------------------------|
 | M-g M-g     | Go to line               |
 | M-g TAB     | Go to column             |
 | M-g c       | Go to character position |

* Marking
  | Key Binding     | Purpose                          |
  |-----------------+----------------------------------|
  | C-x h           | Marks the whole buffer           |
  | C-M-h           | Marks the next ~defun~           |
  | M-@             | Marks the next word              |
  | C-M-<SPC>       | Marks the next s-expression      |
  | C-M-- C-M-<SPC> | Marks the previouss s-expression |

* Searching
** /occur/(M-s o)
*** Show Context Line
    ~list-matching-lines-default-context-lines~

*** /multi-occur/
    for multiple buffers
    - ~multi-occur-in-matching-buffers~: match with regex

*** Edit Matches
    Type /e/ to entry editable mode. Type ~C-c C-c~ to commit the
    changes. The feature is especially great for keyboard macros and
    search & replace.

** Query & Replace
   | Key Binding        | Purpose                         |
   |--------------------+---------------------------------|
   | C-M-%              | Query regexp search and replace |
   | M-%                | Query search and replace        |

** Emacs Regexp Engine
   - These constructs require backslashes or Emacs will treat
   them like literal characters: ~\|~, ~\(~, ~\)~, ~\{~, ~\}~
   - no ~\d~: use ~[0-9]~ or ~[:digit:]~

*** Emacs-only features
    | Constructs    | Description                                                 |
    |---------------+-------------------------------------------------------------|
    | ~\<~, ~\>~    | Matches beginning and end of word                           |
    | ~\_<~, ~\_>~  | Matches beginning and end of symbol                         |
    | ~\scode~      | Matches any character whose syntax table code is ~code~     |
    | ~\Scode~      | Matches any character whose syntax table code is not ~code~ |
    | ~\1~ to ~\9~  | Inserts text from group ~\N~                                |
    | ~\?~          | Prompts for text input from user. *Useful*                  |
    | ~\#~          | Inserts a number incremented from 0                         |
    | ~\&~          | Inserts whole match string                                  |
    | ~,(form ...)~ | Call an elisp form                                          |

    - Some syntax classes:
      - Whitespace characters ~-~
      - Word constituents ~w~
      - Symbol constituents ~_~
      - Punctuation characters ~.~
      - String characters ~"~
   - ~\s-~: to search all whitespace chars
   - Examples of calling elisp form: ~\,(upcase \N)~, ~\,(format "%.2f" \#N)~

** Counting
   Commands: ~count-lines-region~, ~count-matches~, ~count-words~,
   ~count-words-region(M-=)~
** *Very Useful Keybinding*
  | Key Binding | Purpose              |
  |-------------+----------------------|
  | M-g M-n     | next "error"         |
  | M-g M-p     | previous "error"     |
  | C-x =       | what-cursor-position |

** Highlighters
   prefix key ~M-s h~

* Editing
** Kill & Yank
  | Key Binding     | Purpose                 |
  |-----------------+-------------------------|
  | M-d             | Kill word               |
  | C-k             | Kill rest of line       |
  | M-k             | Kill sentence           |
  | C-M-k           | Kill s-expression       |
  | C-w             | Kill active region      |
  | C-S-<backspace> | Kill current line       |
  | M-w             | Copy to kill ring       |
  | C-y             | Yank last kill          |
  | M-y             | Cycle through kill ring |
  | C-M-w           | Append kill             |
  | M-z             | Kill to some char       |

** Transposing
  | Key Binding | Purpose                 |
  |-------------+-------------------------|
  | C-t         | Transpose chars         |
  | M-t         | Transpose words         |
  | C-M-t       | Transpose s-expressions |
  | C-x C-t     | Transpose lines         |

** Filling
  | Key Binding        | Purpose                    |
  |--------------------+----------------------------|
  | M-q                | Refills the paragraph      |
  | C-x f              | Sets the fill column width |
  | C-x .              | Sets the fill prefix       |
  | M-x auto-fill-mode | Toggles auto-filling       |

** Commenting
     | Key Binding     | Purpose                                     |
     |-----------------+---------------------------------------------|
     | M-;             | Comment or uncomment DWIM(Do What I Mean)   |
     | C-x C-;         | Comment or uncomment line                   |
     | M-x comment-box | Comments the region but as a box            |
     | C-M-j           | Inserts new line and continues with comment |

*** Mode Comment Style
    for major mode authors
    | Variable        | Purpose                                                |
    |-----------------+--------------------------------------------------------|
    | comment-style   | Style of comment to use                                |
    | comment-styles  | alist of available comment styles                      |
    | comment-start   | Character(s) to mark start of comment                  |
    | comment-end     | Character(s) to mark end of comment                    |
    | comment-padding | Padding used between comment character(s) and the text |

** Changing Case
  | Key Binding                | Purpose                   |
  |----------------------------+---------------------------|
  | C-x C-u                    | Uppercases the region     |
  | C-x C-l                    | Lowercases the region     |
  | M-x upcase-initials-region | Capitalizes the region    |
  | M-c                        | Capitalizes the next word |
  | M-u                        | Uppercases the next word  |
  | M-l                        | Lowercases the next word  |
  - maintain the tempo: ~M-- M-2 M-u~
** Text Manipulation
   - Delete duplicates: ~M-x delete-duplicate-lines~. Use ~C-u C-u
     C-u~ not to delete adjacent
*** Filter Lines
     - ~flush-lines~: Flushes (deletes) all lines in a region that
       match a pattern
     - ~keep-lines~: Keeps all lines in a region that match a pattern
       and removes all non-matches

*** Join&Split Lines
    | Key Binding | Description                                                     |
    |-------------+-----------------------------------------------------------------|
    | C-o         | Inserts a blank line after point                                |
    | C-x C-o     | Deletes all blank lines after point                             |
    | C-M-o       | Splits a line after point, keeping the indentation(rarely used) |
    | M-^         | Joins the line the point is on with the one above               |

*** Manage Whitespaces
    | Key Binding                   | Description                                            |
    |-------------------------------+--------------------------------------------------------|
    | M-\\                          | Delete all/N spaces and tabs around point              |
    | M-x cycle-spacing             | As above but cycles through all but one, all, and undo |
    | M-x whitespace-mode           | Highlights all whitespace characters                   |
    | M-x whitespace-newline-mode   | Displays newline characters with a ~$~                 |
    | M-x whitespace-toggle-options | Displays a toggle menu of allwhitespace-mode options   |
    - other commands: ~whitespace-report~, ~whitespace-clean-up~

*** Text Expansion
   - To alter how Hippie Expand expands text: check variable
     ~hippie-expand-try-functions-list~
   - find-library: ~hippie-exp~

*** Indenting
   - Variable ~indent-tabs-mode~: use TAB or whitespaces
   - Variable ~tab-width~: controls how many characters of spacing each tab uses
   | Key and Command     | Description                                      |
   |---------------------+--------------------------------------------------|
   | M-x tab-to-tab-stop | Inserts spaces or tabs to next tab stop          |
   | M-x edit-tab-stops  | Edits tab stops                                  |
   | C-M-\               | Indents using major mode's region indent command |
   | C-x TAB             | Rigidly indents(*useful* with C-u)               |
*** Sorting & Aligning
    - ~M-x sort-xxx~: call it with a universal argument it will
      reverse the sort order
    - ~M-x align~, ~M-x align-current~, ~C-x \~: organized by major mode. example for ~C-x \ =~
      #+BEGIN_SRC python
        UNIVERSE_ANSWER_CONST = 42
        UNIVERSE_QUESTION     = "What is The Answer ..."
      #+END_SRC

*** Spell Checking
    | Keys and Commands      | Description                                |
    |------------------------+--------------------------------------------|
    | M-$                    | Spell checks word at the point             |
    | M-x flyspell-prog-mode | Highlights strings and doc strings in code |
    | M-x flyspell-mode      | Minor mode that highlights spelling errors |
    | M-x ispell-region      | Runs spell check on region                 |
    | C-.                    | Auto corrects the word at point            |
*** Insert ASCII Control Code
    ~C-q~: try ~C-q RET~, ~C-q ESC~, ~C-q C-j~, ~C-q TAB~

** Keyboard Macros
    | Key Binding  | Description                                        |
    |--------------+----------------------------------------------------|
    | F3           | Starts macro recording, or inserts *counter value* |
    | F4           | Stops macro recording or plays last macro          |
    | C-u F3       | Starts recording but appends to the last macro     |
    | C-u F4       | Plays the second macro in the ring                 |
    | C-u /num/ F3 | Starts recording but sets counter to /num/         |
    | C-u /num/ F4 | Plays last macro /num/ times                       |
    | C-x ()       | Starts and stops macro recording                   |
    | C-x e        | Plays last macro                                   |
    | C-x C-k      | Prefix key group for macros                        |
    - ~C-u 0 F4~: run the macro over and over again until reaching the
      end of a buffer

*** Counter
When you start recording, Emacs will automatically initialize an
internal counter to zero, and every time you press F3 during the
recording, Emacs will insert the counter and then increment the
internal counter by 1 . There are, of course, many creative uses for
the counter: creating numbered lists is the most obvious.

| Key Binding | Description                                      |
|-------------+--------------------------------------------------|
| C-x C-k C-c | Sets counter                                     |
| C-x C-k C-f | Sets format counter                              |
| C-x C-k C-a | Adds to counter                                  |
| C-x C-k TAB | Runs macro & inserts counter                     |
| C-x C-k q   | Query user during kbd macro execution.  *Useful* |

*** Macro Ring
| Key Binding          | Description                                       |
|----------------------+---------------------------------------------------|
| C-x C-k C-n          | Cycles macro ring to next                         |
| C-x C-k C-p          | Cycles macro ring to previous                     |
| C-x C-k n            | Names the last macro for saving to a file         |
| C-x C-k b            | Binds the last macro to a key(like F5) *Useful*   |
| C-x C-k e            | Edits macro. *Useful*                             |
| C-x C-k l            | Edits the last 300 keystrokes                     |
| M-x insert-kbd-macro | Inserts macro as elisp for saving macro to a file |

** TRAMP: Remote File Editing


* Read Only Mode
  | Keys                        | Description                         |
  |-----------------------------+-------------------------------------|
  | ~C-x C-r~                   | Opens file in read only mode        |
  | ~C-x C-q~                   | Toggles read only mode              |
  | ~M-x flush-lines~           | Flushes lines matching a pattern    |
  | ~M-x keep-lines~            | Keeps only lines matching a pattern |
  | ~M-s o~                     | List lines matching a pattern       |
  | ~M-x auto-revert-mode~      | Reverts buffer when file changes    |
  | ~M-x auto-revert-tail-mode~ | Appends changes when file changes   |

* Mapping Ctrl on Windows
  #+BEGIN_EXAMPLE
    Windows Registry Editor Version 5.00

    [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
    "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00
  #+END_EXAMPLE
