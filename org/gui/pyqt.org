#+TITLE: PyQt
#+KEYWORDS: python GUI qt
#+OPTIONS: H:3 toc:2 num:3 ^:nil
#+LaTeX: t
#+LANGUAGE: en-US
#+AUTHOR: ChrisChen
#+EMAIL: ChrisChen3121@gmail.com
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+SETUPFILE: ../../org-templates/level-1.org
* modules
** QtCore
   SIGNAL, QTime, QTimer
*** Qt
    QT.SplashScreen
** QtGui
*** QApplication
*** QDialog
    - setLayout
    - connect
*** Widgets
    - QLable
    - QTextBrowser: a read-only multi-line text box that can display both plain text and HTML
    - QLineEdit: a single-line editable text box that displays plain text
    - QDial
    - QSpinBox
**** QDockWidget
     need to explicitly pass a parent to it. It will be deleted when its parent is deleted.
     - setAllowedAreas()
     - setFeatures()

*** QAction
*** Layouts
    QVBoxLayoutx


* Dialogs
** Dumb Dialogs
   We define a “dumb” dialog to be a dialog whose widgets are set to their initial
   values by the dialog’s caller, and whose final values are obtained directly from
   the widgets, again by the dialog’s caller.

   Dumb dialogs are normally modal dialogs with an “accept” button (e.g., OK ) and a
   “reject” button (e.g., Cancel ).
   #+BEGIN_SRC python
     dialog = FakeDlg(self.values_to_set, self)
     if dialog.exec_():
         self.values = dialog.someWidget.value()
   #+END_SRC

** Standard Dialogs
   We consider a dialog to be a “standard” dialog if it initializes its widgets in
   accordance with the values set through its initializer or through its methods,
   and whose final values are obtained by method calls or from instance variables—not
   directly from the dialog’s widgets.
   #+BEGIN_SRC python
     dialog = FakeDlg(self.values_to_set, self)
     if dialog.exec_():
         self.values = dialog.get_values()
   #+END_SRC

** Smart Dialogs
   We define a “smart” dialog to be one that initializes its widgets in accordance
   with data references or data structures that are passed to its initializer, and
   which is capable of updating the data directly in response to user interaction.
   #+BEGIN_SRC python
     dialog = FakeDlg(self.values_to_set, self)
     self.connect(dialog, SIGNAL("changed"), self.refreshSomeWidgets)
     dialog.show()
   #+END_SRC
*** live
    #+BEGIN_SRC python
      if self.dialog is None:
          self.dialog = FakeDlg(
              self.values_to_set, self.refreshSomeWidgets, self)
      self.dialog.show()
      self.dialog.raise_()
      self.dialog.activateWindow()
    #+END_SRC

* Signal
** short-circuit
    If we use the SIGNAL() function with an identifier but no parentheses, we are
    specifying a short-circuit signal.

** Qt/Python signal
    If we use the SIGNAL() function with a signalSignature (a possibly empty paren-
    thesized list of comma-separated PyQt types), we are specifying either a
    Python or a Qt signal. (A Python signal is one that is emitted in Python code; a
    Qt signal is one emitted from an underlying C++ object.
