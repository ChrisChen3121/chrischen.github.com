#+TITLE: Chris Chen
#+OPTIONS: H:2 toc:nil num:nil ^:nil
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="resume.css" />
#+BEGIN_CENTER
+8613651824760\\
chrischen3121@gmail.com\\
https://github.com/chrischen3121\\
#+END_CENTER

* _Skills_
- Proficient in python
  - Server-side development
  - Web scraping, data wrangling, backtesting
- Proficient in C++
  - Distributed real-time trading system development
- Knowledge of finance and trading, with background in ETF and Futures markets
- Good problem solving, troubleshooting and debugging skills
- Project Management
- Team Building & Leadership
- Test Driven Development
- Technology Summary

  STL, boost, twisted, scrapy, selenium, numpy, pandas, scipy, git, pyqt4, linux, emacs,
  elisp, GNU Autotools, cmake, zeromq, gtest/gmock, nose, protobuf, flask, hdf5, MySQL,
  redis, MongoDB, SQLAlchemy, docker

* _Experience_
** /2016.5~present/   *Software Architect*   Baomap Asset Management Co.,Ltd
Baomap is startup company whose main business is the overseas assets allocation to high net-worth clients.
- Led the design and implementation of high-modularized distributed quantitative trading system
- Designed and implemented financial data warehouse, provided /RESTful API/, /websocket/ for front-end development.
- Designed and implemented various financial data scraping program.
- Implemented a calendar spreads arbitrage strategy. Responsible for developing, testing and backtesting.

** /2014.7~2016.4/   *General Manager Assistant*   Rione Investment CO.,Ltd
Rione was a leading ETF arbitrage trader in China.
- Led the team to reconstruct the trading system with C++ to achieve huge overall performance improvement
- Designed new interfaces and revised existing code.
- Developed infrastructure utility with functions such as protocol encapsulation, reconnection and heartbeat detection.
- Used C++ to develop ordering management module of futures, provided socket-based API with serialized message for integration.
- Worked closely with trader to successfully build high-level complicated orders.
- Responsible for team building, recruitment, annual evaluation.

** /2008.1~2014.6/   *Team Leader*   NihonKohden
NihonKohden is a leading Japanese manufacturer of medical electronic devices.
- Used socket and COM to implement data transferring with various medical electronic devices
- Implemented integration with the hospital HIS system
- Led a team of 2-3 coworkers to deliver on-site deployment and customer training
- Analyzed customer requirements to optimize user experience

* _Projects_
** /2016.5~present/ Robo-advisor System
- Implemented both historical and intra-day price of self-compiled index follows the rule provided by researcher.
- Implemented the real-time adjusted price of ETF portfolios
- Used /multiprocess/ and /pypy/ to accelerate the real-time calculation of self-compiled index by 90%
- Solved memory leak problem after introduced /pypy/

** /2016.5-present/ Financial Data Platform(independently developed)
techniques: python, lxml, selenium, scrapy, pandas, mysql, mongodb
- real-time data source: Wind, CTP, Bloomberg, Interactive Brokers.
- crawling source: etf.com, nasdaq, morningstar, eoddata, lianjia, Prudential Insurance
- One challenge is to crawl insurance proposals of Hong Kong insurance company. The proposals are not on the site, but they can be downloaded from the client application. I analyzed its network packets, found its 'hidden' pages. Then I eventually retrieved these data.
- In the processing of collecting tick quotes, due to the instability of the network, the data might be incorrect or missing. To solve it, I deployed redundant services on the cloud and implemented a program to merge and correct the data automatically.

** /2016.5-2017.1/ Trading System for Commodity Futures
I was responsible for the architectural design and developed the strategy layer.
- techniques: c++, python, zeromq, pyqt4, pandas
- Designed the interface of strategy so that all strategies can be easily embedded into the system. However, this approach is still on source-level integration. There is room for improvement, like plugin approaches.
- The strategy does not perform well after going on-line. I used python to write a backtest of the strategy, calculate the transaction costs carefully, simulate the real trading as much as possible. Finally, I found the parameter used on-line can't help to reach the expectation.
- Implemented a trading client with ~pyqt~

** /2014.7-2015.10/ High-frequency Quantitative Trading System(Rione)
The companyâ€™s core trading system. It assisted the trading department in creating 50% half-year yield with no daily drawdown at all during the booming market of 2015. The system was proved to load 20 million transactions per day.
- techniques: c++, boost.asio, protobuf, redis
- Developed the shared common library with message encapsulation, socket reconnection, and heartbeat mechanism.
- Designed abstraction of the advanced order layer. Implemented basket order, ETF arbitrage order etc. Because the state transfer of advanced order is complicated and requires high performance, I chose to use ~Boost.MetaStateMachine~ to implement.
- Introduced unit tests to the development process. As a result, 3/4 bugs were reduced during the integration testing phase.
- Based on the inefficient release process, I have recommended using docker for deployment. However, due to the learning cost of the docker itself, the operating team never adopted it.

- reduced 10% of future ordering

** /2011.6-2014.6/ ECG information System(NihonKohden)
The system serves the hospital cardiac department, it collects data from the various diagnostic devices and generates reports to assist the doctor in diagnosis.
I implemented multiple interaction modules corresponding to different diagnostic equipment. techniques: C# .Net, c++, Com, socket
My main contributions to the project are:
- Detected and fixed a memory leak problem within a protocol module which are used by several products.
- By observing user habits, I improved the user experience by changing report generating process to asynchronous.

* _Education_
- /2004-2008/ ~Mechanical Design Manufacturing and Automation~ *Shanghai Institute of Technology*
- Completed several online courses related to mathematics, finance, and computer science on Coursera and Uda.

* _Language_
- English CET-6
- Japanese N2
